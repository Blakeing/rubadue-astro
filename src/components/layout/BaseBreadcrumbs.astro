---
interface Props {
  segments: {
    name: string;
    href: string;
  }[];
  className?: string;
}

const { segments, className = "" } = Astro.props;
---

<nav
  class={`flex bg-background border-b shadow-sm z-10 ${className}`}
  aria-label="Breadcrumb"
>
  <ol
    role="list"
    class="flex items-center mx-auto max-w-7xl px-4 w-full sm:px-6 lg:px-8 py-2 space-x-2 sm:space-x-4 overflow-x-auto"
  >
    {
      segments.map((segment, index) => (
        <li class="flex-shrink-0">
          <div class="flex items-center">
            {index > 0 && (
              <svg
                class="h-4 w-4 sm:h-5 sm:w-5 flex-shrink-0 text-muted-foreground"
                viewBox="0 0 20 20"
                fill="currentColor"
                aria-hidden="true"
              >
                <path
                  fill-rule="evenodd"
                  d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z"
                  clip-rule="evenodd"
                />
              </svg>
            )}
            {index === 0 ? (
              <a
                href={segment.href}
                class="text-muted-foreground hover:text-foreground"
              >
                <svg
                  class="h-4 w-4 sm:h-5 sm:w-5 flex-shrink-0"
                  viewBox="0 0 20 20"
                  fill="currentColor"
                  aria-hidden="true"
                >
                  <path
                    fill-rule="evenodd"
                    d="M9.293 2.293a1 1 0 011.414 0l7 7A1 1 0 0117 11h-1v6a1 1 0 01-1 1h-2a1 1 0 01-1-1v-3a1 1 0 00-1-1H9a1 1 0 00-1 1v3a1 1 0 01-1 1H5a1 1 0 01-1-1v-6H3a1 1 0 01-.707-1.707l7-7z"
                    clip-rule="evenodd"
                  />
                </svg>
                <span class="sr-only">Home</span>
              </a>
            ) : segment.href ? (
              <a
                href={segment.href}
                class={`${index > 0 ? "ml-2 sm:ml-4" : ""} text-xs sm:text-sm font-medium truncate ${
                  index === segments.length - 1
                    ? "text-foreground"
                    : "text-muted-foreground hover:text-foreground"
                }`}
                aria-current={
                  index === segments.length - 1 ? "page" : undefined
                }
              >
                {segment.name}
              </a>
            ) : (
              <span
                class={`${index > 0 ? "ml-2 sm:ml-4" : ""} text-xs sm:text-sm font-medium truncate text-muted-foreground`}
              >
                {segment.name}
              </span>
            )}
          </div>
        </li>
      ))
    }
  </ol>
</nav>
