---
import BaseHead from "@/components/astro/layout/BaseHead.astro";
import { Header } from "@/components/react/Header";
import Footer from "@/components/astro/layout/Footer.astro";
import ProductPage from "@/components/react/ProductPage";
import Breadcrumbs from "@/components/astro/layout/Breadcrumbs.astro";
import { Image } from "astro:assets";

interface Props {
  title: string; // Display title for the BaseHeader
  seoTitle?: string; // Optional SEO title, falls back to title if not provided
  description: string;
  heroImage?: ImageMetadata | string;
  overview?: string;
  applications?: string[];
  construction?: {
    numberWires?: string;
    coatings?: string[];
    sizeRange?: string;
    conductor?: string;
    insulation?: string;
    temperature?: string;
    voltage?: string;
  };
  compliances?: string[];
  systemApprovals?: string[];
  tensileStrength?: string;

  category: string;
  license?: {
    href: string;
    summary: string;
    content: string;
  };
}

const props = Astro.props;

// Build breadcrumb segments starting with just Products
const segments = [{ name: "Products", href: "/products" }];

// Handle all subcategories including the main category
const pathParts = Astro.url.pathname.split("/").filter(Boolean);
if (pathParts.length > 2) {
  // Skip 'products' and get all parts including the final slug
  const pathSegments = pathParts.slice(1);

  let currentPath = "/products";
  for (const segment of pathSegments) {
    currentPath += `/${segment}`;
    // Format the segment name from the URL slug
    const formattedName = segment
      .split("-")
      .map((word) => word.charAt(0).toUpperCase() + word.slice(1))
      .join(" ");

    segments.push({
      name: formattedName,
      href: "/products",
    });
  }
}

// Default placeholder image
import placeholderImage from "@/assets/rubadue-hero.webp";
import { Card, CardContent } from "@/components/react/ui/card";
import BaseHeader from "@/components/astro/layout/BaseHeader.astro";
const heroImage = props.heroImage || placeholderImage;
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead
      title={props.seoTitle || props.title}
      description={props.description}
    />
  </head>
  <body class="min-h-screen">
    <Header client:load />
    <BaseHeader eyebrow={props.category} title={props.title} />
    <div class="mb-6">
      <Breadcrumbs segments={segments} />
    </div>
    <main class="mx-auto max-w-7xl px-2 sm:px-6 lg:px-8 pt-12 pb-24">
      <ProductPage
        client:load
        product={{
          name: props.title,
          description: props.description,
          imageSrc: heroImage,
          imageAlt: props.title,
          compliances: props.compliances,
          construction: props.construction,
          systemApprovals: props.systemApprovals,
          tensileStrength: props.tensileStrength,
          category: props.category,
          overview: props.overview,
          applications: props.applications,
        }}
        license={props.license}
      />

      <article class="max-w-none">
        <slot />
      </article>
    </main>
    <Footer />
  </body>
</html>
