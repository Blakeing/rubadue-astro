---
import { getCollection } from "astro:content";
import BaseHead from "@/components/astro/layout/BaseHead.astro";
import BaseHeader from "@/components/astro/layout/BaseHeader.astro";
import ProductBreadcrumbs from "@/components/astro/layout/ProductBreadcrumbs.astro";
import Footer from "@/components/astro/layout/Footer.astro";
import { Header } from "@/components/react/layout";
import { ProductListingPage } from "@/components/react/pages";

// Get all products from both directory structures
const products = await getCollection("products");

// Map collection data to match Product interface
const mappedProducts = products.map((product) => ({
  id: product.id,
  slug: product.slug,
  collection: product.collection,
  data: {
    ...product.data,
    pubDate: product.data.pubDate.toString(),
  },
}));

// Sort products by date
const sortedProducts = mappedProducts.sort(
  (a, b) =>
    new Date(b.data.pubDate).valueOf() - new Date(a.data.pubDate).valueOf(),
);

// Get unique categories
const categories = [
  ...new Set(mappedProducts.map((post) => post.data.category)),
];

// Get URL parameters for filters
const url = new URL(Astro.request.url);
const searchParams = url.searchParams;

// Parse filter parameters
const typeFilters = searchParams.getAll("type");
const materialFilters = searchParams.getAll("material");
const searchQuery = searchParams.get("q") || "";

// Build filter state object
const filterState = {
  type: typeFilters,
  material: materialFilters,
  search: searchQuery,
};

// Build breadcrumb segments with filter context
const segments = [
  { name: "Home", href: "/" },
  {
    name: "Catalog",
    href: `/catalog${url.search ? `?${url.search}` : ""}`,
  },
];

const title = "Product Catalog";
const description =
  "Browse our complete catalog of high-quality wire and cable products.";
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={title} description={description} />
  </head>
  <body class="min-h-screen bg-background">
    <Header client:load />
    <BaseHeader eyebrow="Product" title="Catalog" />
    <!-- <ProductBreadcrumbs segments={segments} /> -->
    <main>
      <div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8 py-4 sm:py-6 md:py-8">
        <ProductListingPage
          client:load
          products={sortedProducts}
          categories={categories}
          initialFilters={filterState}
        />
      </div>
    </main>
    <Footer />
  </body>
</html>
